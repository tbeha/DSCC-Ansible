---
- name: Export volume playbook
# Export Volume playbook
# v1.0 9/27/2024 Thomas Beha
#
# Parameters:
#   VolumeName - name of volume that should be exported
#   HostGroupName - name of the hostgroup the volume should be exported to
# Optional:
#   LUN         Custom LUN Id for multiple host groups  - Array of objects or null
#               "LUN": [
#                 {
#                   "LUN": 34,
#                   "hostGroupId": "cb17544e9347145d22a0fac608831053",
#                   "nvmeTransportType": "TCP"
#                 }
#               ],
#   autoLun     boolean or null
#   maxAutoLun  Number of volumes.
#   proximity   Host proximity setting for Active Peer Persistence configuration.
#               Supported values are - PRIMARY, SECONDARY and ALL. Default proximity is PRIMARY.
#
# Run command:
#   ansible-playbook Export-Volume.yaml -e "VolumeName='<volumeName>' HostGroupName='<hostgroupName>"
#
  hosts: localhost
  vars:
    method: "POST"
    request_uri: "{{ myvol['resourceUri'] }}/export"
  tasks:

    - name: Read Volume List
      ansible.builtin.set_fact:
        volumes: "{{ lookup( 'file','volumes.json') | from_json }}"

    - name: Get volume
      vars:
        key: "{{ VolumeName }}"
      ansible.builtin.set_fact:
        myvol: "{{ volumes[key] }}"

    - name: Read host_groups.json
      ansible.builtin.set_fact:
        host_groups: "{{ lookup('file', 'host_groups.json') }}"

    - name: Get hostgroup
      vars:
        key: "{{ HostGroupName }}"
      ansible.builtin.set_fact:
        hostgroup:
          - "{{ host_groups[key] }}"

    - name: Set body
      ansible.builtin.set_fact:
        body:
          hostGroupIds: "{{ hostgroup }}"
          autoLun: "true"
      when: LUN is not defined

    - name: Check LUN
      ansible.builtin.set_fact:
        body:
          autoLun: "false"
          LUN: "[{ LUN: {{ LUN }}, hostGroupId: {{ hostgroup }} }]"
      when: LUN is defined and LUN != ""

    - name: DSCC API Call 
      ansible.builtin.include_tasks:
        file: DSCC-API-Call.yaml

    - name: Retry the command if status 401
      ansible.builtin.include_tasks:
        file: DSCC-API-401.yaml
      when: status == '401'

    - name: Show results 
      vars:
        elementname: "Volume"
        result: "{{ response }}"
      ansible.builtin.include_tasks:
        file: DisplayResults.yaml 
